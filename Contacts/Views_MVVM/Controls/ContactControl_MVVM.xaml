<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Contacts.Views_MVVM.Controls.ContactControl_MVVM"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:vm="clr-namespace:Contacts.ViewModels"
    x:DataType="vm:ContactViewModel">

    <VerticalStackLayout Margin="20,20,20,0" Spacing="10">

        <Frame>
            <VerticalStackLayout Spacing="2">
                <Image
                    x:Name="photo"
                    HeightRequest="150"
                    Source="{Binding SelectedImageSource}"
                    WidthRequest="250" />
                    <!--Source="{Binding Contact.ImagePath}"-->
                <!--<Button Clicked="OnSelectImageClicked" Text="Select Image" />-->
                <!--<Button Text="Select Image" Command="{Binding SelectImageCommand}" CommandParameter="{Binding Contact.ImagePath}"/>-->
                <Button Text="Select Image" Command="{Binding SelectImageCommand}"/>
            </VerticalStackLayout>

        </Frame>

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label
                    Text="Name"
                    TextColor="Black"
                    VerticalOptions="Center"
                    WidthRequest="60" />
                <Entry Text="{Binding Contact.Name}" TextColor="Black" VerticalOptions="Center">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior
                            x:Name="nameValidator"
                            Flags="ValidateOnAttaching,ValidateOnValueChanged"
                            IsValid="{Binding IsNameProvided}"
                            MinimumLength="1" />
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label
                    Text="Email"
                    TextColor="Black"
                    VerticalOptions="Center"
                    WidthRequest="60" />
                <Entry
                    x:Name="emailEntry"
                    Placeholder="Add Email address"
                    Text="{Binding Contact.Email}"
                    TextChanged="EmailEntry_OnTextChanged"
                    VerticalOptions="Center">
                    <Entry.Behaviors>
                        <toolkit:MultiValidationBehavior x:Name="emailValidator" Flags="ValidateOnAttaching,ValidateOnValueChanged">
                            <toolkit:TextValidationBehavior
                                toolkit:MultiValidationBehavior.Error="Email is required."
                                Flags="ValidateOnAttaching,ValidateOnValueChanged"
                                IsValid="{Binding IsEmailProvided}"
                                MinimumLength="1" />
                            <toolkit:EmailValidationBehavior
                                toolkit:MultiValidationBehavior.Error="Email format is invalid"
                                Flags="ValidateOnAttaching,ValidateOnValueChanged"
                                IsValid="{Binding IsEmailFormatValid}" />
                        </toolkit:MultiValidationBehavior>
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label
                    Text="Phone"
                    TextColor="Black"
                    VerticalOptions="Center"
                    WidthRequest="60" />
                <Entry
                    x:Name="MobileEntry"
                    Placeholder="Add 10 digit Mobile Number"
                    Text="{Binding Contact.Phone}"
                    TextChanged="MobileEntry_OnTextChanged"
                    VerticalOptions="Center" />
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label
                    Text="Address"
                    TextColor="Black"
                    VerticalOptions="Center"
                    WidthRequest="60" />
                <Entry Text="{Binding Contact.Address}" TextColor="Black" VerticalOptions="Center" />
            </HorizontalStackLayout>
        </Frame>

        <Button x:Name="btnSave" Text="Save" />
        <Button Command="{Binding BackToContactsCommand}" Text="Cancel" />

    </VerticalStackLayout>

</ContentPage>